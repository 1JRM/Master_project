geom_col(aes(substrate, mean, fill = substrate), position = 'dodge', color = "black") +
theme(axis.text.x = element_text(angle = 25)) +
geom_errorbar(aes(substrate, ymin = lwr, ymax = upr, group = method), position = 'dodge', colour = 'gray55') +
ylab(expression(Yield~(mL~CH[4]~gVS^-1))) +
labs(fill = "Substrate") +
theme(legend.position = "bottom") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
theme(legend.title = element_text( size = 9),
legend.text = element_text( size = 7)) +
guides(fill=guide_legend(nrow=2,byrow=TRUE))
ggplot(BMP.gc.gd.grav2) +
geom_col(aes(substrate, mean, fill = substrate), position = 'dodge', color = "black") +
theme(axis.text.x = element_text(angle = 25)) +
geom_errorbar(aes(substrate, ymin = lwr, ymax = upr, group = method), position = 'dodge', colour = 'gray55') +
ylab(expression(Yield~(mL~CH[4]~gVS^-1))) +
labs(fill = "Substrate") +
theme(legend.position = "bottom") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
theme(legend.title = element_text( size = 9),
legend.text = element_text( size = 7)) +
guides(fill=guide_legend(nrow=2,byrow=TRUE))
ggsave('../plots_BMP/BMP_grav.png')
ggplot(BMP.gc.gd.grav2) +
geom_col(aes(substrate, mean, fill = substrate), position = 'dodge', color = "black") +
theme(axis.text.x = element_text(angle = 25)) +
geom_errorbar(aes(substrate, ymin = lwr, ymax = upr, group = method), position = 'dodge', colour = 'gray55') +
ylab(expression(Yield~(mL~CH[4]~gVS^-1))) +
labs(fill = "Substrate") +
theme(legend.position = "bottom") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
theme(legend.title = element_text( size = 10),
legend.text = element_text( size = 8)) +
guides(fill=guide_legend(nrow=2,byrow=TRUE))
setwd("~/Dropbox/JMOR_master_project/BMP/scripts_BMP")
# Main script
# 02.09.2019
# Jacob R. Mortensen
# BMP experiment
# Updated: 13.10.2019
# Load packages
source("package_BMP.R")
# Read in data
source("read_BMP.R")
# Data manipulation
source("data_mani_BMP.R")
# Detection limit for water bottle correction
source("water_detection_limit_BMP.R")
# Scale drift correction and original measurements
source("scale_drift_BMP.R")
# Leaks in bottles
source("leaks_BMP.R")
# Obtaining biogas - Not working at the moment
source("biogas_BMP.R")
# Add gc data to dataframe
source("gc_BMP.R")
# Calculate BMP for each experiment
source("BMP_BMP.R")
View(yld.gd.vol)
BMP.gc.gd.vol$lwr <- BMP.gc.gd.vol$mean - BMP.gc.gd.vol$sd
BMP.gc.gd.vol$upr <- BMP.gc.gd.vol$mean + BMP.gc.gd.vol$sd
BMP.gc.gd.grav$lwr <- BMP.gc.gd.grav$mean - BMP.gc.gd.grav$sd
BMP.gc.gd.grav$upr <- BMP.gc.gd.grav$mean + BMP.gc.gd.grav$sd
BMP.gc.gd.grav2 <- BMP.gc.gd.grav[BMP.gc.gd.grav$method %in% "gc", ]
BMP.gc.gd.grav2 <- BMP.gc.gd.grav2[BMP.gc.gd.grav2$substrate %in% c("Cattle manure", "Clover grass pulp", "OFMSW", "Fertigro"), ]
ggplot(BMP.gc.gd.grav2) +
geom_col(aes(substrate, mean, fill = substrate), position = 'dodge', color = "black") +
theme(axis.text.x = element_text(angle = 25)) +
geom_errorbar(aes(substrate, ymin = lwr, ymax = upr, group = method), position = 'dodge', colour = 'gray55') +
ylab(expression(Yield~(mL~CH[4]~gVS^-1))) +
labs(fill = "Substrate") +
theme(legend.position = "bottom") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
theme(legend.title = element_text( size = 10),
legend.text = element_text( size = 8)) +
guides(fill=guide_legend(nrow=2,byrow=TRUE))
ggplot(BMP.gc.gd.grav2) +
geom_col(aes(substrate, mean, fill = substrate), position = 'dodge', color = "black") +
theme(axis.text.x = element_text(angle = 25)) +
geom_errorbar(aes(substrate, ymin = lwr, ymax = upr, group = method), position = 'dodge', colour = 'gray55') +
ylab(expression(Yield~(mL~CH[4]~gVS^-1))) +
labs(fill = "Substrate") +
theme(legend.position = "bottom") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
theme(legend.title = element_text( size = 10),
legend.text = element_text( size = 8)) +
guides(fill=guide_legend(nrow=2,byrow=TRUE))
ggsave('../plots_BMP/BMP_grav.png')
View(yld.gd.grav)
ggplot(yld.gc.grav, aes(e.time, mean, colour = substrate)) +
geom_line() +
labs(x = 'Time (d)', y = expression(Yield~(mL~CH[4]~gVS^-1)), colour = "Substrate") +
geom_point() +
theme(legend.position = c(0.8, 0.15)) +
theme(legend.title = element_text( size = 8),
legend.text = element_text( size = 7)) +
guides(colour=guide_legend(nrow = 3))
ggsave('../plots_BMP/BMP_grav_gc_line.png')
ggplot(yld.gd.grav, aes(e.time, mean, colour = substrate)) +
geom_line() +
labs(x = 'Time (d)', y = expression(Yield~(mL~CH[4]~gVS^-1)), colour = "Substrate") +
geom_point() +
theme(legend.position = c(0.8, 0.15)) +
theme(legend.title = element_text( size = 8),
legend.text = element_text( size = 7)) +
guides(colour=guide_legend(nrow = 3))
ggsave('../plots_BMP/BMP_grav_gd_line.png')
library(readxl)
library(dplyr)
library(lubridate)
library(ggplot2)
source("../functions/dfsumm.R")
# Start with mass loss fitting to models
dat <- read_excel("../data/Continuous_exp_M_v2.xlsx", sheet = 1, skip = 3)
# Modify dataframe
dfsumm(dat)
dat$mass.bag <- as.numeric(dat$mass.bag)
dat$mass.in <- as.numeric(dat$mass.in)
dat$mass.sub <- as.numeric(dat$mass.sub)
dat$mass.sub.dry <- as.numeric(dat$mass.sub.dry)
dat$mass.dry <- as.numeric(dat$mass.dry)
dat$mass.sub.dry <- as.numeric(dat$mass.sub.dry)
dat$mass.loss <- as.numeric(dat$mass.loss)
dat$condition <- as.factor(dat$condition)
dat$mass.n.fin <- as.numeric(dat$mass.n.fin)
dat$mass.s.fin <- as.numeric(dat$mass.s.fin)
dat$perc.min.n <- as.numeric(dat$perc.min.n)
dat$perc.min.s <- as.numeric(dat$perc.min.s)
dfsumm(dat)
#Lower names
names(dat) <- tolower(names(dat))
# Extract whats important
dat2 <- dat[, c("id", "days", "mass.sub.dry", "perc.min.n", "perc.min.s", "condition")]
# Remove triplicates for mean calculation
dat2$id <- substr(dat2$id, 1, 7)
dat3 <- summarise(group_by(dat2, id), time = mean(days), condition = "condition", mean.mass = mean(mass.sub.dry, na.rm = TRUE))
dat3[c(1, 6, 16, 21, 26, 36), "mean.mass"] <- 25
dat3[c(11, 31), "mean.mass"] <- 50
# Change condition
dat3[1:20, "condition"] <- "Mesophilic"
dat3[21:40, "condition"] <- "Thermophilic"
dat3$substrate <- "Clover gras pulp"
dat3[6:10, "substrate"] <- "Cattle manure"
dat3[11:15, "substrate"] <- "Fertigro"
dat3[16:20, "substrate"] <- "OFMSW"
dat3[26:30, "substrate"] <- "Cattle manure"
dat3[31:35, "substrate"] <- "Fertigro"
dat3[36:40, "substrate"] <- "OFMSW"
dat3$mass.norm[1:10] <- (dat3$mean.mass[1:10]/25) * 100
dat3$mass.norm[11:15] <-(dat3$mean.mass[11:15]/50) * 100
dat3$mass.norm[16:30] <- (dat3$mean.mass[16:30]/25) * 100
dat3$mass.norm[31:35] <- (dat3$mean.mass[31:35]/50) * 100
dat3$mass.norm[36:40] <- (dat3$mean.mass[36:40]/25) * 100
# Plot it up to compare models
ggplot(data = dat3, aes(x = time, y = mass.norm, colour = substrate)) +
geom_point() +
geom_line() +
theme(legend.position = "bottom") +
scale_y_continuous(breaks=c(0, 20, 40, 60, 80, 100), limits = c(0, 100)) +
labs(x = "Time (d)", y = "Normalized mass (%)", colour = "Substrate") +
theme(legend.title = element_text( size = 8),
legend.text = element_text( size = 7)) +
facet_wrap(~condition)
ggsave('../plots/totalmassmineral_con.png')
### Next - % N loss
dat2
dat.min <- summarise(group_by(dat2, id), time = mean(days), condition = "condition", mean.perc.n = mean(perc.min.n, na.rm = TRUE), mean.perc.s = mean(perc.min.s, na.rm = TRUE))
dat.min[1:20, "condition"] <- "Mesophilic"
dat.min[21:40, "condition"] <- "Thermophilic"
dat.min$substrate <- "Clover grass pulp"
dat.min[6:10, "substrate"] <- "Cattle manure"
dat.min[11:15, "substrate"] <- "Fertigro"
dat.min[16:20, "substrate"] <- "OFMSW"
dat.min[26:30, "substrate"] <- "Cattle manure"
dat.min[31:35, "substrate"] <- "Fertigro"
dat.min[36:40, "substrate"] <- "OFMSW"
ggplot(data = dat.min, aes(x = time, y = mean.perc.n, colour = substrate)) +
geom_point() +
geom_line() +
theme(legend.position = "bottom") +
labs(x = "Time (d)", y = "Normalized total organic N (%)", colour = "Substrate") +
theme(legend.title = element_text( size = 8),
legend.text = element_text( size = 7)) +
scale_y_continuous(breaks=c(0, 20, 40, 60, 80, 100), limits = c(0, 100)) +
facet_wrap(~condition)
ggsave('../plots/totalNmineral_con.png')
# And for Sulur
ggplot(data = dat.min, aes(x = time, y = mean.perc.s, colour = substrate)) +
geom_point() +
geom_line() +
theme(legend.position = "bottom") +
labs(x = "Time (d)", y = "Normalized total organic S (%)", colour = "Substrate") +
theme(legend.title = element_text( size = 8),
legend.text = element_text( size = 7)) +
scale_y_continuous(breaks=c(0, 20, 40, 60, 80, 100, 150, 175), limits = c(0, 180)) +
facet_wrap(~condition)
ggsave('../plots/totalSmineral_con.png')
setwd("~/Dropbox/JMOR_master_project/Cont/scripts")
library(readxl)
library(dplyr)
library(lubridate)
library(ggplot2)
source("../functions/dfsumm.R")
# Start with mass loss fitting to models
dat <- read_excel("../data/Continuous_exp_M_v2.xlsx", sheet = 1, skip = 3)
# Modify dataframe
dfsumm(dat)
dat$mass.bag <- as.numeric(dat$mass.bag)
dat$mass.in <- as.numeric(dat$mass.in)
dat$mass.sub <- as.numeric(dat$mass.sub)
dat$mass.sub.dry <- as.numeric(dat$mass.sub.dry)
dat$mass.dry <- as.numeric(dat$mass.dry)
dat$mass.sub.dry <- as.numeric(dat$mass.sub.dry)
dat$mass.loss <- as.numeric(dat$mass.loss)
dat$condition <- as.factor(dat$condition)
dat$mass.n.fin <- as.numeric(dat$mass.n.fin)
dat$mass.s.fin <- as.numeric(dat$mass.s.fin)
dat$perc.min.n <- as.numeric(dat$perc.min.n)
dat$perc.min.s <- as.numeric(dat$perc.min.s)
dfsumm(dat)
#Lower names
names(dat) <- tolower(names(dat))
# Extract whats important
dat2 <- dat[, c("id", "days", "mass.sub.dry", "perc.min.n", "perc.min.s", "condition")]
# Remove triplicates for mean calculation
dat2$id <- substr(dat2$id, 1, 7)
dat3 <- summarise(group_by(dat2, id), time = mean(days), condition = "condition", mean.mass = mean(mass.sub.dry, na.rm = TRUE))
dat3[c(1, 6, 16, 21, 26, 36), "mean.mass"] <- 25
dat3[c(11, 31), "mean.mass"] <- 50
# Change condition
dat3[1:20, "condition"] <- "Mesophilic"
dat3[21:40, "condition"] <- "Thermophilic"
dat3$substrate <- "Clover gras pulp"
dat3[6:10, "substrate"] <- "Cattle manure"
dat3[11:15, "substrate"] <- "Fertigro"
dat3[16:20, "substrate"] <- "OFMSW"
dat3[26:30, "substrate"] <- "Cattle manure"
dat3[31:35, "substrate"] <- "Fertigro"
dat3[36:40, "substrate"] <- "OFMSW"
dat3$mass.norm[1:10] <- (dat3$mean.mass[1:10]/25) * 100
dat3$mass.norm[11:15] <-(dat3$mean.mass[11:15]/50) * 100
dat3$mass.norm[16:30] <- (dat3$mean.mass[16:30]/25) * 100
dat3$mass.norm[31:35] <- (dat3$mean.mass[31:35]/50) * 100
dat3$mass.norm[36:40] <- (dat3$mean.mass[36:40]/25) * 100
# Plot it up to compare models
ggplot(data = dat3, aes(x = time, y = mass.norm, colour = substrate)) +
geom_point() +
geom_line() +
theme(legend.position = "bottom") +
scale_y_continuous(breaks=c(0, 20, 40, 60, 80, 100), limits = c(0, 100)) +
labs(x = "Time (d)", y = "Normalized mass (%)", colour = "Substrate") +
theme(legend.title = element_text( size = 8),
legend.text = element_text( size = 7)) +
facet_wrap(~condition)
ggsave('../plots/totalmassmineral_con.png')
### Next - % N loss
dat2
dat.min <- summarise(group_by(dat2, id), time = mean(days), condition = "condition", mean.perc.n = mean(perc.min.n, na.rm = TRUE), mean.perc.s = mean(perc.min.s, na.rm = TRUE))
dat.min[1:20, "condition"] <- "Mesophilic"
dat.min[21:40, "condition"] <- "Thermophilic"
dat.min$substrate <- "Clover grass pulp"
dat.min[6:10, "substrate"] <- "Cattle manure"
dat.min[11:15, "substrate"] <- "Fertigro"
dat.min[16:20, "substrate"] <- "OFMSW"
dat.min[26:30, "substrate"] <- "Cattle manure"
dat.min[31:35, "substrate"] <- "Fertigro"
dat.min[36:40, "substrate"] <- "OFMSW"
ggplot(data = dat.min, aes(x = time, y = mean.perc.n, colour = substrate)) +
geom_point() +
geom_line() +
theme(legend.position = "bottom") +
labs(x = "Time (d)", y = "Normalized total organic N (%)", colour = "Substrate") +
theme(legend.title = element_text( size = 8),
legend.text = element_text( size = 7)) +
scale_y_continuous(breaks=c(0, 20, 40, 60, 80, 100), limits = c(0, 100)) +
facet_wrap(~condition)
ggsave('../plots/totalNmineral_con.png')
# And for Sulur
ggplot(data = dat.min, aes(x = time, y = mean.perc.s, colour = substrate)) +
geom_point() +
geom_line() +
theme(legend.position = "bottom") +
labs(x = "Time (d)", y = "Normalized total organic S (%)", colour = "Substrate") +
theme(legend.title = element_text( size = 8),
legend.text = element_text( size = 7)) +
scale_y_continuous(breaks=c(0, 20, 40, 60, 80, 100, 150, 175), limits = c(0, 180)) +
facet_wrap(~condition)
ggsave('../plots/totalSmineral_con.png')
setwd("~/Dropbox/JMOR_master_project/Batch/scripts")
# Main script
# 02.09.2019
# Jacob R. Mortensen
# Batch experiment
# Updated: 05.09.2019
# Load packages
source("package.R")
# Read in data
source("read.R")
# Data manipulation
source("data_mani.R")
# Detection limit for water bottle correction
source("water_detection_limit.R")
# Scale drift correction and original measurements
source("scale_drift.R")
# Leaks in bottles
source("leaks.R")
# Obtaining biogas - Not working at the moment
source("biogas.R")
# Add gc data to dataframe
source("gc.R")
# Calculate BMP for each experiment
source("BMP.R")
# Gompertz and logistic models
# Solver was performed in excel. Can be found at Dropbox/Master.project/batch/data/solver
#CGP30
loggomp <- data.frame(time = c(0, 2, 3, 5, 7, 9, 14, 20, 30),
gas.obs = c(0, 93, 149, 198, 230, 230, 233, 227, 238))
loggomp$Model <- "Observed"
gompertz <- data.frame(time = c(0, 2, 3, 5, 7, 9, 14, 20, 30),
gas.obs = 232.7*exp(-exp((((59.1*2.7188)/232.7)*(0.44-loggomp$time))+1)))
gompertz$Model <- "Gompertz"
gompplot <- rbind(loggomp, gompertz)
gompplot$id <- "CGP30"
#CGP12g
loggomp12g <- data.frame(time = c(0, 2, 3, 5, 7, 9, 14, 20, 30),
gas.obs = c(0, 108, 172, 222, 246, 250, 256, 250, 267))
loggomp12g$Model <- "Observed"
gompertz12g <- data.frame(time = c(0, 2, 3, 5, 7, 9, 14, 20, 30),
gas.obs = 254.4*exp(-exp((((67.2*2.7188)/254.4)*(0.40-loggomp$time))+1)))
gompertz12g$Model <- "Gompertz"
gomp12g <- rbind(loggomp12g, gompertz12g)
gomp12g$id <- "CGP12g"
#CGP24g
loggomp24g <- data.frame(time = c(0, 2, 3, 5, 7, 9, 14, 20, 30),
gas.obs = c(0, 61, 103, 164, 201, 213, 230, 232, 243))
loggomp24g$Model <- "Observed"
gompertz24g <- data.frame(time = c(0, 2, 3, 5, 7, 9, 14, 20, 30),
gas.obs = 233.5*exp(-exp((((38.4*2.7188)/233.5)*(0.42-loggomp$time))+1)))
gompertz24g$Model <- "Gompertz"
gomp24g <- rbind(loggomp24g, gompertz24g)
gomp24g$id <- "CGP24g"
# Combine
gomp_fin <- rbind(gompplot, gomp12g, gomp24g)
# FOM approach (XXXX)
fFOM <- yld.gc.grav[yld.gc.grav$substrate %in% "CGP30", ]
class(fFOM)
fFOM <- rename(fFOM,
time.d = e.time,
id = substrate,
cvCH4 = mean)
source("../functions/mod_fit_stats.R")
ff <-  fitFOM(fFOM, n.pool = 1, fit.to = 'yield', method = 'LM', abs.err = FALSE,
trans = TRUE, lag.phase = FALSE, init = c(B = 230, k = 0.3))
#CGP30
ff2 <- data.frame(time = c(0, 2, 3, 5, 7, 9, 14, 20, 30),
gas.obs = (239.2599133 * (1-exp(-0.3220491*(loggomp$time)))))
gomp2 <- gompertz <- data.frame(time = c(0, 2, 3, 5, 7, 9, 14, 20, 30),
gas.obs = 232.67 *exp(-exp((((59.12*2.7188)/232.67)*(0.44-loggomp$time))+1)))
ff2$Model <- "FOM"
gomp2$Model <- "Gompertz"
gompplot2 <- rbind(gomp2, ff2, loggomp)
gompplot2$id <- "CGP30"
# CGP12g
CGPfom <- data.frame(time = c(0, 2, 3, 5, 7, 9, 14, 20, 30),
gas.obs = c(0, 108, 172, 222, 246, 250, 256, 250, 267))
CGPfom$Model <- "Observed"
cgpmod12g <- data.frame(time = c(0, 2, 3, 5, 7, 9, 14, 20, 30),
gas.obs = (262.0 * (1-exp(-0.3353*(loggomp$time)))))
cgpgomp2 <- gompertz <- data.frame(time = c(0, 2, 3, 5, 7, 9, 14, 20, 30),
gas.obs = 254.437 *exp(-exp((((67.23*2.7188)/254.437)*(0.399-loggomp$time))+1)))
cgpmod12g$Model <- "FOM"
cgpgomp2$Model <- "Gompertz"
gompplot3 <- rbind(cgpgomp2, cgpmod12g, CGPfom)
gompplot3$id <- "CGP12g"
#CGP24g
CGPfom2 <- data.frame(time = c(0, 2, 3, 5, 7, 9, 14, 20, 30),
gas.obs = c(0, 61, 103, 164, 201, 213, 230, 232, 243))
CGPfom2$Model <- "Observed"
cgpmod24g <- data.frame(time = c(0, 2, 3, 5, 7, 9, 14, 20, 30),
gas.obs = (244.55 * (1-exp(-0.2052*(loggomp$time)))))
cgpgomp3 <- data.frame(time = c(0, 2, 3, 5, 7, 9, 14, 20, 30),
gas.obs = 233.47 *exp(-exp((((38.366*2.7188)/233.47)*(0.42-loggomp$time))+1)))
cgpmod24g$Model <- "FOM"
cgpgomp3$Model <- "Gompertz"
gompplot4 <- rbind(cgpgomp3, cgpmod24g, CGPfom2)
gompplot4$id <- "CGP24g"
# Final
gomp2_fin <- rbind(gompplot3, gompplot4, gompplot2)
# Plot different models:
ggplot(data = loggomp, aes(x = time, y = gas.obs)) +
geom_point() +
geom_line() +
labs(x = "Time (d)", y = expression(Yield~(mL~CH[4]~gVS^-1)))
ggsave('../plots/obs_model.png')
ggplot(data = gomp_fin, aes(x = time, y = gas.obs, colour = Model)) +
geom_point() +
geom_line() +
theme(legend.position = c(0.9, 0.15)) +
scale_color_manual(values=c('red','dodgerblue', 'black')) +
labs(x = "Time (d)", y = expression(Yield~(mL~CH[4]~gVS^-1))) +
facet_wrap(~id) +
scale_y_continuous(breaks=c(200, 220, 240, 250, 260, 270))
ggsave('../plots/gomp_log_obs2.png')
ggplot(data = gomp_fin, aes(x = time, y = gas.obs, colour = Model)) +
geom_point() +
geom_line() +
theme(legend.position = c(0.9, 0.15)) +
scale_color_manual(values=c('red','dodgerblue', 'black')) +
labs(x = "Time (d)", y = expression(Yield~(mL~CH[4]~gVS^-1))) +
facet_wrap(~id)
ggsave('../plots/gomp_log_obs2.png')
ggplot(data = gomp_fin, aes(x = time, y = gas.obs, colour = Model)) +
geom_point() +
geom_line() +
theme(legend.position = c(0.9, 0.15)) +
scale_color_manual(values=c('red','dodgerblue', 'black')) +
labs(x = "Time (d)", y = expression(Yield~(mL~CH[4]~gVS^-1))) +
facet_wrap(~id)
scale_y_continuous(breaks=c(0, 100, 200, 250, 300))
ggplot(data = gomp_fin, aes(x = time, y = gas.obs, colour = Model)) +
geom_point() +
geom_line() +
theme(legend.position = c(0.9, 0.15)) +
scale_color_manual(values=c('red','dodgerblue', 'black')) +
labs(x = "Time (d)", y = expression(Yield~(mL~CH[4]~gVS^-1))) +
facet_wrap(~id)
scale_y_continuous(breaks=c(0, 100, 200, 250, 300), limits = c(0,300))
ggplot(data = gomp_fin, aes(x = time, y = gas.obs, colour = Model)) +
geom_point() +
geom_line() +
theme(legend.position = c(0.9, 0.15)) +
scale_color_manual(values=c('red','dodgerblue', 'black')) +
labs(x = "Time (d)", y = expression(Yield~(mL~CH[4]~gVS^-1))) +
facet_wrap(~id) +
scale_y_continuous(breaks=c(0, 100, 200, 250, 300), limits = c(0,300))
ggplot(data = gomp_fin, aes(x = time, y = gas.obs, colour = Model)) +
geom_point() +
geom_line() +
theme(legend.position = c(0.9, 0.15)) +
scale_color_manual(values=c('red','dodgerblue', 'black')) +
labs(x = "Time (d)", y = expression(Yield~(mL~CH[4]~gVS^-1))) +
facet_wrap(~id) +
scale_y_continuous(breaks=c(0, 100, 200, 250, 300), limits = c(0,300))
ggsave('../plots/gomp_log_obs2.png')
ggplot(data = gomp2_fin, aes(x = time, y = gas.obs, colour = Model)) +
geom_point() +
geom_line() +
theme(legend.position = c(0.9, 0.15)) +
scale_color_manual(values=c('red','dodgerblue', 'black')) +
labs(x = "Time (d)", y = expression(Yield~(mL~CH[4]~gVS^-1))) +
facet_wrap(~id) +
scale_y_continuous(breaks=c(0, 100, 200, 250, 300), limits = c(0,300))
ggplot(data = gomp2_fin, aes(x = time, y = gas.obs, colour = Model)) +
geom_point() +
geom_line() +
theme(legend.position = c(0.9, 0.15)) +
scale_color_manual(values=c('red','dodgerblue', 'black')) +
labs(x = "Time (d)", y = expression(Yield~(mL~CH[4]~gVS^-1))) +
facet_wrap(~id) +
scale_y_continuous(breaks=c(0, 100, 200, 250, 300), limits = c(0,300))
ggsave('../plots/gomp_log_obs3.png')
ggplot(data = gomp_fin, aes(x = time, y = gas.obs, colour = Model)) +
geom_point() +
geom_line() +
theme(legend.position = c(0.9, 0.15)) +
scale_color_manual(values=c('red', 'black')) +
labs(x = "Time (d)", y = expression(Yield~(mL~CH[4]~gVS^-1))) +
facet_wrap(~id) +
scale_y_continuous(breaks=c(0, 100, 200, 250, 300), limits = c(0,300))
ggplot(data = gomp_fin, aes(x = time, y = gas.obs, colour = Model)) +
geom_point() +
geom_line() +
theme(legend.position = c(0.9, 0.15)) +
scale_color_manual(values=c('dodgerblue', 'black')) +
labs(x = "Time (d)", y = expression(Yield~(mL~CH[4]~gVS^-1))) +
facet_wrap(~id) +
scale_y_continuous(breaks=c(0, 100, 200, 250, 300), limits = c(0,300))
ggplot(data = gomp_fin, aes(x = time, y = gas.obs, colour = Model)) +
geom_point() +
geom_line() +
theme(legend.position = c(0.9, 0.15)) +
scale_color_manual(values=c('dodgerblue', 'black')) +
labs(x = "Time (d)", y = expression(Yield~(mL~CH[4]~gVS^-1))) +
facet_wrap(~id) +
scale_y_continuous(breaks=c(0, 100, 200, 250, 300), limits = c(0,300))
ggsave('../plots/gomp_log_obs2.png')
ggplot(data = gomp2_fin, aes(x = time, y = gas.obs, colour = Model)) +
geom_point() +
geom_line() +
theme(legend.position = c(0.9, 0.15)) +
scale_color_manual(values=c('red','dodgerblue', 'black')) +
labs(x = "Time (d)", y = expression(Yield~(mL~CH[4]~gVS^-1))) +
facet_wrap(~id) +
scale_y_continuous(breaks=c(0, 100, 200, 250, 300), limits = c(0,300))
ggplot(data = gomp2_fin, aes(x = time, y = gas.obs, colour = Model)) +
geom_point() +
geom_line() +
theme(legend.position = c(0.9, 0.15)) +
scale_color_manual(values=c('red','dodgerblue', 'black')) +
labs(x = "Time (d)", y = expression(Yield~(mL~CH[4]~gVS^-1))) +
facet_wrap(~id) +
scale_y_continuous(breaks=c(0, 100, 200, 250, 300), limits = c(0,300))
ggsave('../plots/gomp_log_obs3.png')
